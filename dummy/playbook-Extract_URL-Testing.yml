id: 1b4f2dee-f2c5-4554-83a3-d87bfd215ad3
version: 9
name: 'Extract URL-Testing '
starttaskid: "0"
tasks:
  "0":
    id: "0"
    taskid: 887a1eb1-3f12-453e-86c8-136f5792dc5b
    type: start
    task:
      id: 887a1eb1-3f12-453e-86c8-136f5792dc5b
      version: -1
      name: ""
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "1"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 265,
          "y": 50
        }
      }
    note: false
  "1":
    id: "1"
    taskid: d424fbe1-ca99-4136-8a3b-214dfd038d44
    type: regular
    task:
      id: d424fbe1-ca99-4136-8a3b-214dfd038d44
      version: -1
      name: 'Extract URL from incident '
      description: Extract URLs from the given text and place them both as output
        and in the context of a playbook. If given an object, will convert to JSON.
      script: ExtractURL
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "2"
    scriptarguments:
      text:
        complex:
          root: incident
          accessor: details
      urlRegex: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 265,
          "y": 195
        }
      }
    note: false
  "2":
    id: "2"
    taskid: 2b82718c-673a-42f2-8de5-5dde17d368d7
    type: regular
    task:
      id: 2b82718c-673a-42f2-8de5-5dde17d368d7
      version: -1
      name: Check URL Reputation
      description: Check URL Reputation
      script: VirusTotal|||url
      type: regular
      iscommand: true
      brand: VirusTotal
    nexttasks:
      '#none#':
      - "3"
    scriptarguments:
      long: {}
      retries: {}
      sampleSize: {}
      submitWait: {}
      threshold: {}
      url:
        complex:
          root: URL
          accessor: Data
      wait: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 265,
          "y": 370
        }
      }
    note: false
  "3":
    id: "3"
    taskid: 6f204917-8420-4b94-8e4f-d7d4f2a511c9
    type: condition
    task:
      id: 6f204917-8420-4b94-8e4f-d7d4f2a511c9
      version: -1
      name: Check if malicious URL were found
      description: Check if a given value exists in the context. Will return 'no'
        for empty empty arrays. To be used mostly with DQ and selectors.
      script: Exists
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "5"
      "yes":
      - "4"
    scriptarguments:
      value:
        complex:
          root: URL
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 265,
          "y": 545
        }
      }
    note: false
  "4":
    id: "4"
    taskid: d59ba570-8d04-4363-87e0-ee93a8bc7ba3
    type: regular
    task:
      id: d59ba570-8d04-4363-87e0-ee93a8bc7ba3
      version: -1
      name: Assign to User
      description: |-
        Send an email with the specified parameters.
        Attachments are provided as a comma-separated list of entry IDs.
        Example usage: !SendEmail subject="File from war room" body="Please see the attached file. --DBot" to=jane@acme.com cc=john@acme.com attachIDs=89@3,46@3
      script: AssignAnalystToIncident
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "6"
    scriptarguments:
      assignBy:
        simple: geeta.mangrulkar
      email: {}
      roles: {}
      username: {}
    continueonerror: true
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 50,
          "y": 720
        }
      }
    note: false
  "5":
    id: "5"
    taskid: 2d5f61ae-22e1-44c7-847d-99dc16c1d17e
    type: regular
    task:
      id: 2d5f61ae-22e1-44c7-847d-99dc16c1d17e
      version: -1
      name: 'Don''t assign to user '
      description: |-
        Send an email with the specified parameters.
        Attachments are provided as a comma-separated list of entry IDs.
        Example usage: !SendEmail subject="File from war room" body="Please see the attached file. --DBot" to=jane@acme.com cc=john@acme.com attachIDs=89@3,46@3
      script: AssignAnalystToIncident
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "6"
    scriptarguments:
      assignBy: {}
      email: {}
      roles: {}
      username: {}
    continueonerror: true
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 480,
          "y": 720
        }
      }
    note: false
  "6":
    id: "6"
    taskid: 9b11295e-ebe4-48ae-85ae-2e29ead37178
    type: regular
    task:
      id: 9b11295e-ebe4-48ae-85ae-2e29ead37178
      version: -1
      name: CloseInvestigation
      description: Close an investigation
      script: CloseInvestigation
      type: regular
      iscommand: false
      brand: ""
    scriptarguments:
      notes: {}
      reason: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 265,
          "y": 895
        }
      }
    note: false
view: |-
  {
    "linkLabelsPosition": {},
    "paper": {
      "dimensions": {
        "height": 940,
        "width": 810,
        "x": 50,
        "y": 50
      }
    }
  }
inputs: []
outputs: []
