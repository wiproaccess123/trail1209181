commonfields:
  id: a0c4acd8-640b-4b62-81f5-026be1698cb8
  version: 48
name: extractDetails
script: |
  entries = demisto.executeCommand('getEntries', {})
  csvEntry = None
  for entry in entries:
      fn = demisto.get(entry, 'File')
      if type(fn) in [unicode, str] and fn.endswith('.csv'):
          csvEntry = entry
          break
  if csvEntry:
      res = demisto.executeCommand('getFilePath', {'id': entry['ID']})
      with open(res[0]['Contents']['path'], 'r') as f:
          data = f.read()
      if data:
          demisto.setContext('csv', data)
          demisto.results('Read %d bytes from CSV and inserted %d items into incident context.' % (len(data), len(data.split(','))) )
      else:
          demisto.results( { "Type" : entryTypes["error"], "ContentsFormat" : formats["text"], "Contents" : 'No data could be read.' } )
  else:
      demisto.results( { "Type" : entryTypes["error"], "ContentsFormat" : formats["text"], "Contents" : 'No csv file found in the war room. Ensure the file was uploaded and the filename ends in ".csv".' } )
type: python
tags: []
comment: This script will extract the data corresponding to a particular column
enabled: true
args:
- name: EntryID
  required: true
scripttarget: 0
runonce: false
dockerimage: pandas
